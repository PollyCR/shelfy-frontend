{"ast":null,"code":"var _jsxFileName = \"/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null\n    };\n\n    this.login = user => {\n      this.setState({\n        user\n      }, () => this.props.history.push('/'));\n    };\n\n    this.setUser = user => this.setState({\n      user\n    });\n\n    this.logout = () => {\n      API.logout();\n      this.setState({\n        user: null\n      });\n      this.props.history.push('/login');\n    };\n  }\n\n  componentDidMount() {\n    BackendAdapter.validateUser().then(user => {\n      if (!user.id && this.props.history.location.pathname !== '/signup') {\n        this.props.history.push('/login');\n      } else {\n        this.setUser(user);\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, routes.map(route => React.createElement(Route, {\n      key: route.path,\n      path: route.path,\n      exact: true,\n      component: routerProps => route.component ? React.createElement(route.component, Object.assign({}, routerProps, {\n        user: this.state.user,\n        login: this.login,\n        logout: this.logout,\n        signup: this.signup,\n        setUser: this.setUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })) : notFoundMessage(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/src/App.js"],"names":["React","App","Component","state","user","login","setState","props","history","push","setUser","logout","API","componentDidMount","BackendAdapter","validateUser","then","id","location","pathname","render","routes","map","route","path","routerProps","component","signup","notFoundMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAE;AADA,KADwB;;AAAA,SAehCC,KAfgC,GAexBD,IAAI,IAAI;AACd,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd,EAAwB,MAAM,KAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAA9B;AACD,KAjB+B;;AAAA,SAmBhCC,OAnBgC,GAmBtBN,IAAI,IAAI,KAAKE,QAAL,CAAc;AAACF,MAAAA;AAAD,KAAd,CAnBc;;AAAA,SAsBhCO,MAtBgC,GAsBvB,MAAM;AACbC,MAAAA,GAAG,CAACD,MAAJ;AACA,WAAKL,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd;AACA,WAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,KA1B+B;AAAA;;AAKhCI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,cAAc,CAACC,YAAf,GAA8BC,IAA9B,CAAmCZ,IAAI,IAAI;AACzC,UAAI,CAACA,IAAI,CAACa,EAAN,IAAY,KAAKV,KAAL,CAAWC,OAAX,CAAmBU,QAAnB,CAA4BC,QAA5B,KAAyC,SAAzD,EAAoE;AAClE,aAAKZ,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,OAFD,MAEO;AACL,aAAKC,OAAL,CAAaN,IAAb;AACD;AACF,KAND;AAOD;;AAeDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,MAAM,CAACC,GAAP,CAAWC,KAAK,IACf,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,IADb;AAEE,MAAA,IAAI,EAAED,KAAK,CAACC,IAFd;AAGE,MAAA,KAAK,MAHP;AAIE,MAAA,SAAS,EAAEC,WAAW,IACpBF,KAAK,CAACG,SAAN,GACE,oBAAC,KAAD,CAAO,SAAP,oBACMD,WADN;AAEE,QAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWC,IAFnB;AAGE,QAAA,KAAK,EAAE,KAAKC,KAHd;AAIE,QAAA,MAAM,EAAE,KAAKM,MAJf;AAKE,QAAA,MAAM,EAAE,KAAKgB,MALf;AAME,QAAA,OAAO,EAAE,KAAKjB,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAUEkB,eAAe,EAfrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAFF,CADF;AA4BD;;AAzD+B","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    user: null\n  }\n\n  componentDidMount() {\n    BackendAdapter.validateUser().then(user => {\n      if (!user.id && this.props.history.location.pathname !== '/signup') {\n        this.props.history.push('/login')\n      } else {\n        this.setUser(user)\n      }\n    })\n  }\n\n  login = user => {\n    this.setState({ user }, () => this.props.history.push('/'))\n  }\n\n  setUser = user => this.setState({user})\n\n\n  logout = () => {\n    API.logout()\n    this.setState({ user: null })\n    this.props.history.push('/login')\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Container >\n          {routes.map(route => (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact\n              component={routerProps =>\n                route.component ? (\n                  <route.component\n                    {...routerProps}\n                    user={this.state.user}\n                    login={this.login}\n                    logout={this.logout}\n                    signup={this.signup}\n                    setUser={this.setUser}\n                  />\n                ) : (\n                  notFoundMessage()\n                )\n              }\n            />\n          ))}\n        </Container>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}