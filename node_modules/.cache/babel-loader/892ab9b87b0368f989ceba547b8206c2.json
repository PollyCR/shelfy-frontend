{"ast":null,"code":"import _defineProperty from \"/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst BASE_URL = \"http://localhost:3000\";\nconst LOGIN_URL = \"\".concat(BASE_URL, \"/login\");\nconst SIGNUP_URL = \"\".concat(BASE_URL, \"/signup\");\nconst VALIDATE_URL = \"\".concat(BASE_URL, \"/validate\");\n\nconst headers = (more = {}) => _objectSpread({\n  'Content-Type': 'application/json',\n  Accept: 'application/json'\n}, more);\n\nconst authHeader = (more = {}) => _objectSpread({\n  Authorisation: localStorage.getItem('token')\n}, more);\n\nconst handleError = () => {\n  console.error('something went wrong');\n};\n\nconst handleServerResponse = res => {// if (res.ok) {\n  //   return res.text().then(text => {\n  //     try {\n  //       return JSON.parse(text)\n  //     } catch (error) {\n  //       return { staticPageContent: text }\n  //     }\n  //   })\n  // } else if (res.status === 503) {\n  //   return { code: 503 }\n  // } else if (res.status === 500) {\n  //   return { code: 500, error: 'IDEK what is going on ' }\n  // } else {\n  //   return res.text().then(text => {\n  //     try {\n  //       return JSON.parse(text)\n  //     } catch (error) {\n  //       return res\n  //     }\n  //   })\n  // }\n};\n\nconst signup = userDetails => fetch(SIGNUP_URL, {\n  method: 'POST',\n  headers: headers(),\n  body: JSON.stringify({\n    user: userDetails\n  })\n}).then(handleServerResponse).then(userDetails => {\n  if (userDetails.token) {\n    localStorage.setItem('token', userDetails.token);\n  }\n\n  return userDetails.user;\n}).catch(handleError);\n\nconst login = userDetails => fetch(LOGIN_URL, {\n  method: 'POST',\n  headers: headers(),\n  body: JSON.stringify({\n    user: userDetails\n  })\n}).then(handleServerResponse).then(userDetails => {\n  if (userDetails.token) {\n    localStorage.setItem('token', userDetails.token);\n  }\n\n  return userDetails.user;\n}).catch(handleError);\n\nconst validateUser = () => fetch(VALIDATE_URL, {\n  method: 'GET',\n  headers: headers(authHeader())\n}).then(handleServerResponse).then(userDetails => {\n  if (!userDetails) {\n    return {\n      errors: ['something went wrong ']\n    };\n  }\n\n  if (userDetails.token) {\n    localStorage.setItem('token', userDetails.token);\n  }\n\n  return userDetails.user || userDetails;\n}).catch(handleError);\n\nconst logout = () => {\n  localStorage.removeItem('token');\n};\n\nexport default {\n  login,\n  signup,\n  validateUser,\n  logout\n};","map":{"version":3,"sources":["/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/src/adapters/API.js"],"names":["BASE_URL","LOGIN_URL","SIGNUP_URL","VALIDATE_URL","headers","more","Accept","authHeader","Authorisation","localStorage","getItem","handleError","console","error","handleServerResponse","res","signup","userDetails","fetch","method","body","JSON","stringify","user","then","token","setItem","catch","login","validateUser","errors","logout","removeItem"],"mappings":"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","sourcesContent":["const BASE_URL = \"http://localhost:3000\"\n\nconst LOGIN_URL = `${BASE_URL}/login`\nconst SIGNUP_URL = `${BASE_URL}/signup`\nconst VALIDATE_URL = `${BASE_URL}/validate`\n\n\nconst headers = (more = {}) => ({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    ...more\n  })\n  const authHeader = (more = {}) => ({\n    Authorisation: localStorage.getItem('token'),\n    ...more\n  })\n  \n  const handleError = () => {\n    console.error('something went wrong')\n  }\n  \n  const handleServerResponse = res => {\n    // if (res.ok) {\n    //   return res.text().then(text => {\n    //     try {\n    //       return JSON.parse(text)\n    //     } catch (error) {\n    //       return { staticPageContent: text }\n    //     }\n    //   })\n    // } else if (res.status === 503) {\n    //   return { code: 503 }\n    // } else if (res.status === 500) {\n    //   return { code: 500, error: 'IDEK what is going on ' }\n    // } else {\n    //   return res.text().then(text => {\n    //     try {\n    //       return JSON.parse(text)\n    //     } catch (error) {\n    //       return res\n    //     }\n    //   })\n    // }\n  }\n  \n  const signup = userDetails =>\n  fetch(SIGNUP_URL, {\n  method: 'POST',\n  headers: headers(),\n  body: JSON.stringify({ user: userDetails })\n  })\n  .then(handleServerResponse)\n  .then(userDetails => {\n      if (userDetails.token) {\n        localStorage.setItem('token', userDetails.token)\n      }\n      return userDetails.user\n})\n.catch(handleError)\n  \n  const login = userDetails =>\n    fetch(LOGIN_URL, {\n      method: 'POST',\n      headers: headers(),\n      body: JSON.stringify({ user: userDetails })\n    })\n      .then(handleServerResponse)\n      .then(userDetails => {\n        if (userDetails.token) {\n          localStorage.setItem('token', userDetails.token)\n        }\n        return userDetails.user\n      })\n      .catch(handleError)\n  \n  const validateUser = () =>\n    fetch(VALIDATE_URL, {\n      method: 'GET',\n      headers: headers(authHeader())\n    })\n      .then(handleServerResponse)\n      .then(userDetails => {\n        if (!userDetails) {\n          return { errors: ['something went wrong '] }\n        }\n        if (userDetails.token) {\n          localStorage.setItem('token', userDetails.token)\n        }\n        return userDetails.user || userDetails\n      })\n      .catch(handleError)\n  \n  \n  const logout = () => {\n    localStorage.removeItem('token')\n  }\n  export default {\n    login,\n    signup,\n    validateUser,\n    logout\n  }"]},"metadata":{},"sourceType":"module"}