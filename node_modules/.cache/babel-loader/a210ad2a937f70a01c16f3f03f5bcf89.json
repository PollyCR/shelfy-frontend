{"ast":null,"code":"import _defineProperty from \"/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst BASE_URL = \"http://localhost:3000\";\nconst LOGIN_URL = \"\".concat(BASE_URL, \"/login\");\nconst SIGNUP_URL = \"\".concat(BASE_URL, \"/signup\");\nconst VALIDATE_URL = \"\".concat(BASE_URL, \"/validate\");\n\nconst headers = (more = {}) => _objectSpread({\n  \"Content-Type\": \"application/json\",\n  'Accept': \"application/json\"\n}, more);\n\nconst get = url => {\n  return fetch(url).then(resToJSON);\n};\n\nconst authHeader = (more = {}) => _objectSpread({\n  Authorisation: localStorage.getItem(\"token\")\n}, more);\n\nconst handleError = () => {\n  console.error(\"no can do\");\n};\n\nconst post = (url, data) => {\n  const config = {\n    method: \"POST\",\n    headers: headers(),\n    body: JSON.stringify(data)\n  };\n  return fetch(url, config);\n};\n\nconst login = userDetails => fetch(LOGIN_URL, {\n  method: 'POST',\n  headers: headers(),\n  body: JSON.stringify({\n    user: userDetails\n  })\n}).then(handleServerResponse).then(userDetails => {\n  if (userDetails.token) {\n    localStorage.setItem('token', userDetails.token);\n  }\n\n  return userDetails.user;\n}).catch(handleError);\n\nconst signup = userDetails => fetch(SIGNUP_URL, {\n  method: 'POST',\n  headers: headers(),\n  body: JSON.stringify({\n    user: userDetails\n  })\n}).then(handleServerResponse).then(userDetails => {\n  if (userDetails.token) {\n    localStorage.setItem('token', userDetails.token);\n  }\n\n  return userDetails.user;\n}).catch(handleError);\n\nconst logout = () => {\n  localStorage.removeItem('token');\n};\n\nconst validateUser = () => fetch(VALIDATE_URL, {\n  method: 'POST',\n  headers: authHeader()\n}).then(handleServerResponse).then(userDetails => {\n  if (!userDetails) {\n    return {\n      errors: ['something went wrong ']\n    };\n  }\n\n  if (userDetails.token) {\n    localStorage.setItem('token', userDetails.token);\n  }\n\n  return userDetails.user || userDetails;\n}).catch(handleError);\n\nconst handleServerResponse = res => {\n  if (res.ok) {\n    return res.text().then(text => {\n      try {\n        return JSON.parse(text);\n      } catch (error) {\n        return {\n          staticPageContent: text\n        };\n      }\n    });\n  } else if (res.status === 503) {\n    return {\n      code: 503\n    };\n  } else if (res.status === 500) {\n    return {\n      code: 500,\n      error: 'IDEK what is going on '\n    };\n  } else {\n    return res.text().then(text => {\n      try {\n        return JSON.parse(text);\n      } catch (error) {\n        return res;\n      }\n    });\n  }\n};\n\nconst patch = (url, id, data) => {\n  const config = {\n    method: \"PATCH\",\n    headers: headers(),\n    body: JSON.stringify(data)\n  };\n  return fetch(\"\".concat(url, \"/\").concat(id), config);\n};\n\nconst destroy = (url, id) => {\n  const config = {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  };\n  return fetch(\"\".concat(url, \"/\").concat(id), config);\n};\n\nexport default {\n  BASE_URL,\n  get,\n  post,\n  patch,\n  destroy,\n  validateUser,\n  login,\n  logout,\n  signup\n};","map":{"version":3,"sources":["/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/src/adapters/API.js"],"names":["BASE_URL","LOGIN_URL","SIGNUP_URL","VALIDATE_URL","headers","more","get","url","fetch","then","resToJSON","authHeader","Authorisation","localStorage","getItem","handleError","console","error","post","data","config","method","body","JSON","stringify","login","userDetails","user","handleServerResponse","token","setItem","catch","signup","logout","removeItem","validateUser","errors","res","ok","text","parse","staticPageContent","status","code","patch","id","destroy","Accept"],"mappings":"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","sourcesContent":["const BASE_URL = \"http://localhost:3000\"\n\nconst LOGIN_URL = `${BASE_URL}/login`\nconst SIGNUP_URL = `${BASE_URL}/signup`\nconst VALIDATE_URL = `${BASE_URL}/validate`\n\nconst headers = (more = {}) => ({\n  \"Content-Type\": \"application/json\",\n  'Accept': \"application/json\",\n  ...more\n});\n\n\n\nconst get = url => {\n  return fetch(url).then(resToJSON);\n};\n\nconst authHeader = (more = {}) => ({\n  Authorisation: localStorage.getItem(\"token\"),\n  ...more\n});\n\nconst handleError = () => {\n  console.error(\"no can do\");\n};\n\nconst post = (url, data) => {\n  const config = {\n    method: \"POST\",\n    headers: headers(),\n    body: JSON.stringify(data)\n  };\n  return fetch(url, config);\n};\n\nconst login = userDetails =>\n  fetch(LOGIN_URL, {\n    method: 'POST',\n    headers: headers(),\n    body: JSON.stringify({ user: userDetails })\n  })\n    .then(handleServerResponse)\n    .then(userDetails => {\n      if (userDetails.token) {\n        localStorage.setItem('token', userDetails.token)\n      }\n      return userDetails.user\n    })\n    .catch(handleError)\n\n\nconst signup = userDetails =>\n    fetch(SIGNUP_URL, {\n    method: 'POST',\n    headers: headers(),\n    body: JSON.stringify({ user: userDetails })\n    })\n    .then(handleServerResponse)\n    .then(userDetails => {\n        if (userDetails.token) {\n          localStorage.setItem('token', userDetails.token)\n        }\n        return userDetails.user\n})\n.catch(handleError)\n\nconst logout = () => {\n    localStorage.removeItem('token')\n  }\n\n  const validateUser = () =>\n  fetch(VALIDATE_URL, {\n    method: 'POST',\n    headers: authHeader()\n  })\n    .then(handleServerResponse)\n    .then(userDetails => {\n      if (!userDetails) {\n        return { errors: ['something went wrong '] }\n      }\n      if (userDetails.token) {\n        localStorage.setItem('token', userDetails.token)\n      }\n      return userDetails.user || userDetails\n    })\n    .catch(handleError)\n\nconst handleServerResponse = res => {\n    if (res.ok) {\n      return res.text().then(text => {\n        try {\n          return JSON.parse(text)\n        } catch (error) {\n          return { staticPageContent: text }\n        }\n      })\n    } else if (res.status === 503) {\n      return { code: 503 }\n    } else if (res.status === 500) {\n      return { code: 500, error: 'IDEK what is going on ' }\n    } else {\n      return res.text().then(text => {\n        try {\n          return JSON.parse(text)\n        } catch (error) {\n          return res\n        }\n      })\n    }\n  }\n\nconst patch = (url, id, data) => {\n  const config = {\n    method: \"PATCH\",\n    headers: headers(),\n    body: JSON.stringify(data)\n  };\n  return fetch(`${url}/${id}`, config);\n};\n\nconst destroy = (url, id) => {\n  const config = {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  };\n  return fetch(`${url}/${id}`, config);\n};\n\n\n\nexport default {\n  BASE_URL,\n  get,\n  post,\n  patch,\n  destroy,\n  validateUser,\n  login,\n  logout,\n  signup,\n};\n"]},"metadata":{},"sourceType":"module"}