{"ast":null,"code":"import _defineProperty from \"/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst BASE_URL = \"http://localhost:3000/\";\nconst LOGIN_URL = \"\".concat(BASE_URL, \"api/v1/login\");\nconst SIGNUP_URL = \"\".concat(BASE_URL, \"api/v1/signup\");\nconst VALIDATE_URL = \"\".concat(BASE_URL, \"api/v1/validate\");\n\nconst headers = (more = {}) => _objectSpread({\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n}, more);\n\nconst authHeader = (more = {}) => _objectSpread({\n  Authorisation: localStorage.getItem(\"token\")\n}, more);\n\nconst handleError = () => {\n  console.error(\"something went wrong\");\n};\n\nconst getMorningRoutine = user => {\n  fetch(\"http://localhost:3000/api/v1/morning_routines\", {\n    method: \"POST\",\n    headers: headers(authHeader()),\n    body: JSON.stringify({\n      morning_routine: {\n        user_id: user.id\n      }\n    })\n  }).then(res => res.json()).then(console.log);\n};\n\nconst getEveningRoutine = user => {\n  fetch(\"http://localhost:3000/api/v1/evening_routines\", {\n    method: \"GET\",\n    headers: headers(authHeader()),\n    body: JSON.stringify({\n      evening_routine: {\n        user_id: user.id\n      }\n    })\n  }).then(res => res.json()).then(console.log);\n};\n\nconst getTreatmentRoutine = user => {\n  fetch(\"http://localhost:3000/api/v1/treatment_routines\", {\n    method: \"GET\",\n    headers: headers(authHeader()),\n    body: JSON.stringify({\n      treatment_routine: {\n        user_id: user.id\n      }\n    })\n  }).then(res => res.json()).then(console.log);\n};\n\nconst handleServerResponse = res => {\n  // console.log(res => res.json())\n  if (res.ok) {\n    return res.text().then(text => {\n      try {\n        return JSON.parse(text);\n      } catch (error) {\n        return {\n          staticPageContent: text\n        };\n      }\n    });\n  } else if (res.status === 503) {\n    return {\n      code: 503\n    };\n  } else if (res.status === 500) {\n    return {\n      code: 500,\n      error: \"IDEK what is going on \"\n    };\n  } else {\n    return res.text().then(text => {\n      try {\n        return JSON.parse(text);\n      } catch (error) {\n        return res;\n      }\n    });\n  }\n};\n\nconst signup = userDetails => fetch(SIGNUP_URL, {\n  method: \"POST\",\n  headers: headers(),\n  body: JSON.stringify({\n    user: userDetails\n  })\n}).then(handleServerResponse).then(userDetails => {\n  if (userDetails.token) {\n    localStorage.setItem(\"token\", userDetails.token);\n  }\n\n  return userDetails.user;\n}).then(() => validateUser()).catch(handleError);\n\nconst login = userDetails => fetch(LOGIN_URL, {\n  method: \"POST\",\n  headers: headers(),\n  body: JSON.stringify({\n    user: userDetails\n  })\n}).then(handleServerResponse).then(userDetails => {\n  if (userDetails.token) {\n    localStorage.setItem(\"token\", userDetails.token);\n  }\n\n  return userDetails.user;\n}).then(() => validateUser()).catch(handleError);\n\nconst validateUser = () => fetch(VALIDATE_URL, {\n  method: \"POST\",\n  headers: headers(authHeader())\n}).then(handleServerResponse).then(userDetails => {\n  if (userDetails.errors) {\n    return {\n      errors: [\"something went wrong \"]\n    };\n  }\n\n  if (userDetails.token) {}\n\n  return userDetails.user || userDetails;\n}).catch(handleError);\n\nconst logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\nexport default {\n  login,\n  signup,\n  validateUser,\n  logout,\n  getMorningRoutine,\n  getEveningRoutine,\n  getTreatmentRoutine\n};","map":{"version":3,"sources":["/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/src/adapters/API.js"],"names":["BASE_URL","LOGIN_URL","SIGNUP_URL","VALIDATE_URL","headers","more","Accept","authHeader","Authorisation","localStorage","getItem","handleError","console","error","getMorningRoutine","user","fetch","method","body","JSON","stringify","morning_routine","user_id","id","then","res","json","log","getEveningRoutine","evening_routine","getTreatmentRoutine","treatment_routine","handleServerResponse","ok","text","parse","staticPageContent","status","code","signup","userDetails","token","setItem","validateUser","catch","login","errors","logout","removeItem"],"mappings":"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","sourcesContent":["\n\nconst BASE_URL = \"http://localhost:3000/\";\n\nconst LOGIN_URL = `${BASE_URL}api/v1/login`;\nconst SIGNUP_URL = `${BASE_URL}api/v1/signup`;\nconst VALIDATE_URL = `${BASE_URL}api/v1/validate`;\n\n\nconst headers = (more = {}) => ({\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\",\n  ...more\n});\nconst authHeader = (more = {}) => ({\n  Authorisation: localStorage.getItem(\"token\"),\n  ...more\n});\n\nconst handleError = () => {\n  console.error(\"something went wrong\");\n};\n\nconst getMorningRoutine = user => {\n  fetch(\"http://localhost:3000/api/v1/morning_routines\", {\n    method: \"POST\",\n    headers: headers(authHeader()),\n    body: JSON.stringify({ morning_routine: {user_id: user.id} })\n  }).then(res => res.json()).then(console.log)\n}\n\nconst getEveningRoutine = user => {\n  fetch(\"http://localhost:3000/api/v1/evening_routines\", {\n    method: \"GET\",\n    headers: headers(authHeader()),\n    body: JSON.stringify({ evening_routine: {user_id: user.id} })\n  }).then(res => res.json()).then(console.log)\n}\n\nconst getTreatmentRoutine = user => {\n  fetch(\"http://localhost:3000/api/v1/treatment_routines\", {\n    method: \"GET\",\n    headers: headers(authHeader()),\n    body: JSON.stringify({ treatment_routine: {user_id: user.id} })\n  }).then(res => res.json()).then(console.log)\n}\n\nconst handleServerResponse = res => {\n  // console.log(res => res.json())\n  if (res.ok) {\n    return res.text().then(text => {\n      try {\n        return JSON.parse(text);\n      } catch (error) {\n        return { staticPageContent: text };\n      }\n    });\n  } else if (res.status === 503) {\n    return { code: 503 };\n  } else if (res.status === 500) {\n    return { code: 500, error: \"IDEK what is going on \" };\n  } else {\n    return res.text().then(text => {\n      try {\n        return JSON.parse(text);\n      } catch (error) {\n        return res;\n      }\n    });\n  }\n};\n\nconst signup = userDetails =>\n  fetch(SIGNUP_URL, {\n    method: \"POST\",\n    headers: headers(),\n    body: JSON.stringify({ user: userDetails })\n  })\n    .then(handleServerResponse)\n    .then(userDetails => {\n      if (userDetails.token) {\n        localStorage.setItem(\"token\", userDetails.token);\n      }\n      return userDetails.user;\n    })\n    .then(() => validateUser())\n    .catch(handleError);\n\nconst login = userDetails =>\n  fetch(LOGIN_URL, {\n    method: \"POST\",\n    headers: headers(),\n    body: JSON.stringify({ user: userDetails })\n  })\n    .then(handleServerResponse)\n    .then(userDetails => {\n      if (userDetails.token) {\n        localStorage.setItem(\"token\", userDetails.token);\n      }\n      return userDetails.user;\n    }).then(() => validateUser())\n    .catch(handleError)\n\n\n\n\nconst validateUser = () =>\n  fetch(VALIDATE_URL, {\n    method: \"POST\",\n    headers: headers(authHeader())\n  })\n    .then(handleServerResponse)\n    .then(userDetails => {\n      if (userDetails.errors) {\n        return { errors: [\"something went wrong \"] };\n      }\n      if (userDetails.token) {\n        \n      }\n      return userDetails.user || userDetails;\n    })\n    .catch(handleError);\n\nconst logout = () => {\n  localStorage.removeItem(\"token\");\n};\nexport default {\n  login,\n  signup,\n  validateUser,\n  logout,\n  getMorningRoutine,\n  getEveningRoutine,\n  getTreatmentRoutine\n};\n"]},"metadata":{},"sourceType":"module"}