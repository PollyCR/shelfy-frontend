{"ast":null,"code":"import _defineProperty from \"/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst BASE_URL = \"http://localhost:3000\";\nconst LOGIN_URL = \"\".concat(BASE_URL, \"/login\");\nconst SIGNUP_URL = \"\".concat(BASE_URL, \"/signup\");\nconst VALIDATE_URL = \"\".concat(BASE_URL, \"/validate\");\n\nconst jsonHeaders = (more = {}) => _objectSpread({\n  'Content-Type': 'application/json',\n  Accept: 'application/json'\n}, more);\n\nconst authHeader = (more = {}) => _objectSpread({\n  Authorisation: localStorage.getItem('token')\n}, more);\n\nconst handleError = () => {\n  console.error('something went wrong');\n};\n\nconst handleServerResponse = res => {\n  if (res.ok) {\n    return res.text().then(text => {\n      try {\n        return JSON.parse(text);\n      } catch (error) {\n        return {\n          staticPageContent: text\n        };\n      }\n    });\n  } else if (res.status === 503) {\n    return {\n      code: 503\n    };\n  } else if (res.status === 500) {\n    return {\n      code: 500,\n      error: 'Something went wrong'\n    };\n  } else {\n    return res.text().then(text => {\n      try {\n        return JSON.parse(text);\n      } catch (error) {\n        return res;\n      }\n    });\n  }\n};\n\nconst getPosts = () => fetch(POSTS_URL).then(handleServerResponse);\n\nconst getPost = id => fetch(\"\".concat(POSTS_URL, \"/\").concat(id)).then(handleServerResponse);\n\nconst login = userDetails => fetch(LOGIN_URL, {\n  method: 'POST',\n  headers: jsonHeaders(),\n  body: JSON.stringify({\n    user: userDetails\n  })\n}).then(handleServerResponse).then(userDetails => {\n  if (userDetails.token) {\n    localStorage.setItem('token', userDetails.token);\n  }\n\n  return userDetails.user;\n}).catch(handleError);\n\nconst validateUser = () => fetch(VALIDATE_URL, {\n  method: 'POST',\n  headers: authHeader()\n}).then(handleServerResponse).then(userDetails => {\n  if (!userDetails) {\n    return {\n      errors: ['something went wrong ']\n    };\n  }\n\n  if (userDetails.token) {\n    localStorage.setItem('token', userDetails.token);\n  }\n\n  return userDetails.user || userDetails;\n}).catch(handleError);\n\nconst postPost = post => fetch(POSTS_URL, {\n  method: 'POST',\n  headers: jsonHeaders(authHeader()),\n  body: JSON.stringify({\n    post\n  })\n}).then(handleServerResponse).catch(handleError);\n\nconst logout = () => {\n  localStorage.removeItem('token');\n};\n\nexport default {\n  login,\n  validateUser,\n  logout\n};","map":{"version":3,"sources":["/Users/Polly/iCloud Drive (Archive)/Documents/Flatiron/Project/shelfy/shelfy-frontend/src/adapters/API.js"],"names":["BASE_URL","LOGIN_URL","SIGNUP_URL","VALIDATE_URL","jsonHeaders","more","Accept","authHeader","Authorisation","localStorage","getItem","handleError","console","error","handleServerResponse","res","ok","text","then","JSON","parse","staticPageContent","status","code","getPosts","fetch","POSTS_URL","getPost","id","login","userDetails","method","headers","body","stringify","user","token","setItem","catch","validateUser","errors","postPost","post","logout","removeItem"],"mappings":";;;;;;AAAA,MAAMA,QAAQ,GAAG,uBAAjB;AAEA,MAAMC,SAAS,aAAMD,QAAN,WAAf;AACA,MAAME,UAAU,aAAMF,QAAN,YAAhB;AACA,MAAMG,YAAY,aAAMH,QAAN,cAAlB;;AACA,MAAMI,WAAW,GAAG,CAACC,IAAI,GAAG,EAAR;AAChB,kBAAgB,kBADA;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,GAGbD,IAHa,CAApB;;AAKE,MAAME,UAAU,GAAG,CAACF,IAAI,GAAG,EAAR;AACjBG,EAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADE,GAEdL,IAFc,CAAnB;;AAKA,MAAMM,WAAW,GAAG,MAAM;AACxBC,EAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd;AACD,CAFD;;AAIA,MAAMC,oBAAoB,GAAGC,GAAG,IAAI;AAClC,MAAIA,GAAG,CAACC,EAAR,EAAY;AACV,WAAOD,GAAG,CAACE,IAAJ,GAAWC,IAAX,CAAgBD,IAAI,IAAI;AAC7B,UAAI;AACF,eAAOE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACD,OAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,eAAO;AAAEQ,UAAAA,iBAAiB,EAAEJ;AAArB,SAAP;AACD;AACF,KANM,CAAP;AAOD,GARD,MAQO,IAAIF,GAAG,CAACO,MAAJ,KAAe,GAAnB,EAAwB;AAC7B,WAAO;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAFM,MAEA,IAAIR,GAAG,CAACO,MAAJ,KAAe,GAAnB,EAAwB;AAC7B,WAAO;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaV,MAAAA,KAAK,EAAE;AAApB,KAAP;AACD,GAFM,MAEA;AACL,WAAOE,GAAG,CAACE,IAAJ,GAAWC,IAAX,CAAgBD,IAAI,IAAI;AAC7B,UAAI;AACF,eAAOE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACD,OAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,eAAOE,GAAP;AACD;AACF,KANM,CAAP;AAOD;AACF,CAtBD;;AAwBA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACC,SAAD,CAAL,CAAiBR,IAAjB,CAAsBJ,oBAAtB,CAAvB;;AACA,MAAMa,OAAO,GAAGC,EAAE,IAAIH,KAAK,WAAIC,SAAJ,cAAiBE,EAAjB,EAAL,CAA4BV,IAA5B,CAAiCJ,oBAAjC,CAAtB;;AAEA,MAAMe,KAAK,GAAGC,WAAW,IACvBL,KAAK,CAACxB,SAAD,EAAY;AACf8B,EAAAA,MAAM,EAAE,MADO;AAEfC,EAAAA,OAAO,EAAE5B,WAAW,EAFL;AAGf6B,EAAAA,IAAI,EAAEd,IAAI,CAACe,SAAL,CAAe;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAf;AAHS,CAAZ,CAAL,CAKGZ,IALH,CAKQJ,oBALR,EAMGI,IANH,CAMQY,WAAW,IAAI;AACnB,MAAIA,WAAW,CAACM,KAAhB,EAAuB;AACrB3B,IAAAA,YAAY,CAAC4B,OAAb,CAAqB,OAArB,EAA8BP,WAAW,CAACM,KAA1C;AACD;;AACD,SAAON,WAAW,CAACK,IAAnB;AACD,CAXH,EAYGG,KAZH,CAYS3B,WAZT,CADF;;AAeA,MAAM4B,YAAY,GAAG,MACnBd,KAAK,CAACtB,YAAD,EAAe;AAClB4B,EAAAA,MAAM,EAAE,MADU;AAElBC,EAAAA,OAAO,EAAEzB,UAAU;AAFD,CAAf,CAAL,CAIGW,IAJH,CAIQJ,oBAJR,EAKGI,IALH,CAKQY,WAAW,IAAI;AACnB,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO;AAAEU,MAAAA,MAAM,EAAE,CAAC,uBAAD;AAAV,KAAP;AACD;;AACD,MAAIV,WAAW,CAACM,KAAhB,EAAuB;AACrB3B,IAAAA,YAAY,CAAC4B,OAAb,CAAqB,OAArB,EAA8BP,WAAW,CAACM,KAA1C;AACD;;AACD,SAAON,WAAW,CAACK,IAAZ,IAAoBL,WAA3B;AACD,CAbH,EAcGQ,KAdH,CAcS3B,WAdT,CADF;;AAiBA,MAAM8B,QAAQ,GAAGC,IAAI,IACnBjB,KAAK,CAACC,SAAD,EAAY;AACfK,EAAAA,MAAM,EAAE,MADO;AAEfC,EAAAA,OAAO,EAAE5B,WAAW,CAACG,UAAU,EAAX,CAFL;AAGf0B,EAAAA,IAAI,EAAEd,IAAI,CAACe,SAAL,CAAe;AAAEQ,IAAAA;AAAF,GAAf;AAHS,CAAZ,CAAL,CAKGxB,IALH,CAKQJ,oBALR,EAMGwB,KANH,CAMS3B,WANT,CADF;;AASA,MAAMgC,MAAM,GAAG,MAAM;AACnBlC,EAAAA,YAAY,CAACmC,UAAb,CAAwB,OAAxB;AACD,CAFD;;AAGA,eAAe;AACbf,EAAAA,KADa;AAEbU,EAAAA,YAFa;AAGbI,EAAAA;AAHa,CAAf","sourcesContent":["const BASE_URL = \"http://localhost:3000\"\n\nconst LOGIN_URL = `${BASE_URL}/login`\nconst SIGNUP_URL = `${BASE_URL}/signup`\nconst VALIDATE_URL = `${BASE_URL}/validate`\nconst jsonHeaders = (more = {}) => ({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    ...more\n  })\n  const authHeader = (more = {}) => ({\n    Authorisation: localStorage.getItem('token'),\n    ...more\n  })\n  \n  const handleError = () => {\n    console.error('something went wrong')\n  }\n  \n  const handleServerResponse = res => {\n    if (res.ok) {\n      return res.text().then(text => {\n        try {\n          return JSON.parse(text)\n        } catch (error) {\n          return { staticPageContent: text }\n        }\n      })\n    } else if (res.status === 503) {\n      return { code: 503 }\n    } else if (res.status === 500) {\n      return { code: 500, error: 'Something went wrong' }\n    } else {\n      return res.text().then(text => {\n        try {\n          return JSON.parse(text)\n        } catch (error) {\n          return res\n        }\n      })\n    }\n  }\n  \n  const getPosts = () => fetch(POSTS_URL).then(handleServerResponse)\n  const getPost = id => fetch(`${POSTS_URL}/${id}`).then(handleServerResponse)\n  \n  const login = userDetails =>\n    fetch(LOGIN_URL, {\n      method: 'POST',\n      headers: jsonHeaders(),\n      body: JSON.stringify({ user: userDetails })\n    })\n      .then(handleServerResponse)\n      .then(userDetails => {\n        if (userDetails.token) {\n          localStorage.setItem('token', userDetails.token)\n        }\n        return userDetails.user\n      })\n      .catch(handleError)\n  \n  const validateUser = () =>\n    fetch(VALIDATE_URL, {\n      method: 'POST',\n      headers: authHeader()\n    })\n      .then(handleServerResponse)\n      .then(userDetails => {\n        if (!userDetails) {\n          return { errors: ['something went wrong '] }\n        }\n        if (userDetails.token) {\n          localStorage.setItem('token', userDetails.token)\n        }\n        return userDetails.user || userDetails\n      })\n      .catch(handleError)\n  \n  const postPost = post =>\n    fetch(POSTS_URL, {\n      method: 'POST',\n      headers: jsonHeaders(authHeader()),\n      body: JSON.stringify({ post })\n    })\n      .then(handleServerResponse)\n      .catch(handleError)\n  \n  const logout = () => {\n    localStorage.removeItem('token')\n  }\n  export default {\n    login,\n    validateUser,\n    logout\n  }"]},"metadata":{},"sourceType":"module"}